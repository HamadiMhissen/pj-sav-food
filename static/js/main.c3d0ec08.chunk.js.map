{"version":3,"sources":["Components/CreerCompte/validationFunctions.js","Components/styles.js","Components/CreerCompte/index.js","images/mlrLogo.png","Components/CreerCompte/validateMdpFunctions.js","Components/CreerCompte/mdpPage.js","Components/Login/index.js","App.js","reportWebVitals.js","index.js"],"names":["validatePrenomOuNom","prenom","test","length","validateEmail","email","includes","validateTel","telephone","validateJour","jour","parseInt","validateMois","mois","validateAnnee","annee","anneeEnChiffres","validatePerson","nom","portable","fixe","jj","mm","yyyy","isEmptyPerson","Input","styled","input","InputLarge","InputDate","StyledLink","Link","CreerCompte","navigate","useNavigate","useState","sexe","date","tel","telFixe","person","setPerson","client","setClient","userToRegister","dateNaiss","password","onSubmit","event","preventDefault","state","className","style","marginRight","marginTop","marginBottom","type","name","value","checked","onChange","e","currentTarget","placeholder","target","field","cursor","color","fontWeight","disabled","validateNumber","validateSpecialChar","validateMinuscule","validateMajuscule","CreerComptePart2","value1","value2","eye","eyeSlash","checkIcon","incorrectIcon","initMdp","verifMdp","mdp","setMdp","input1Hide","setInput1Hide","input2Hide","setInput2Hide","location","useLocation","a","axios","post","then","response","console","log","data","catch","error","alert","message","src","imgLogo","width","height","alt","onClick","listStyleType","textAlign","marginLeft","paddingTop","paddingBottom","backgroundColor","Login","emptyCompte","compte","setCompte","setIsShown","localStorage","setItem","getItem","status","display","to","onMouseEnter","href","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"0TAAO,SAASA,EAAoBC,GAElC,MAAI,OAAOC,KAAKD,GAAgB,qCACvBA,EAAOE,OAAS,GAAW,cACxB,KAGP,SAASC,EAAcC,GAC5B,OAAKA,EAAMC,SAAS,MAAQD,EAAMF,OAAS,GAClC,6BACG,KAEP,SAASI,EAAYC,GAC1B,OAAIA,EAAUL,OAAS,GAAW,0CACtB,KAEP,SAASM,EAAaC,GAE3B,OADuBC,SAASD,GACX,IAAMA,EAAKP,OAAS,EAAU,kBACvC,KAEP,SAASS,EAAaC,GAE3B,OADuBF,SAASE,GACX,IAAMA,EAAKV,OAAS,EAAU,kBACvC,KAEP,SAASW,EAAcC,GAC5B,IAAMC,EAAkBL,SAASI,GACjC,OAAIC,EAAkB,MAAQA,EAAkB,MAAQD,EAAMZ,OAAS,EAC9D,sBACG,KAEP,SAASc,EACdhB,EACAiB,EACAb,EACAc,EACAC,EACAC,EACAC,EACAC,GAEA,KAEIvB,EAAoBC,IACpBD,EAAoBkB,IACpBd,EAAcC,IACdE,EAAYY,IACZZ,EAAYa,IACZX,EAAaY,IACbT,EAAaU,IACbR,EAAcS,IAGhB,OAAO,EAEJ,SAASC,EAAcvB,EAAQiB,EAAKb,EAAOc,EAAUE,EAAIC,EAAIC,GAClE,KAAMtB,GAAUiB,GAAOb,GAASc,GAAYE,GAAMC,GAAMC,GAAO,OAAO,E,6BCtD3DE,EAAQC,IAAOC,MAAV,6YAmBLC,EAAaF,YAAOD,EAAPC,CAAH,6CAGVG,EAAYH,YAAOE,EAAPF,CAAH,6CAYTI,GATSJ,YAAOE,EAAPF,CAAH,wJASOA,YAAOK,IAAPL,CAAH,md,OCsNRM,MA5Of,WACI,IAEMC,EAAWC,cAUjB,EAA4BC,mBATR,CAChBlC,OAAQ,GACRiB,IAAK,GACLkB,KAAM,QACNC,KAAM,CAAC3B,KAAM,GAAIG,KAAM,GAAIE,MAAO,IAClCV,MAAO,GACPiC,IAAK,GACLC,QAAS,KAEb,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA4BN,mBAAS,OAArC,mBAAOO,EAAP,KAAeC,EAAf,KAEMC,EAAiB,CACnB3C,OAAQuC,EAAOvC,OACfiB,IAAKsB,EAAOtB,IACZkB,KAAMI,EAAOJ,KACb/B,MAAOmC,EAAOnC,MACdiC,IAAKE,EAAOF,IACZC,QAASC,EAAOD,QAChBM,UAAU,GAAD,OAAKL,EAAOH,KAAKtB,MAAjB,YAA0ByB,EAAOH,KAAKxB,KAAtC,YAA8C2B,EAAOH,KAAK3B,MACnEoC,SAAU,WAUd,OACI,gCACI,6BAnCU,2BAoCV,uBAAMC,SARb,SAAsBC,GACnBA,EAAMC,iBACNhB,EAAS,eAAgB,CAACiB,MAAO,CAACN,qBAM9B,UACI,oBAAGO,UAAU,WAAb,UACI,wBAAOC,MAAO,CAACC,YAAa,OAAQC,UAAW,OAAQC,aAAa,QAApE,UACK,SACD,uBACIC,KAAK,QACLC,KAAK,OACLC,MAAM,QACNC,QAAyB,UAAhBnB,EAAOJ,KAChBwB,SAAU,SAACC,GAAD,OACNpB,EAAU,2BAAID,GAAL,IAAaJ,KAAMyB,EAAEC,cAAcJ,eAIxD,wBAAON,MAAO,CAACE,UAAW,OAAQC,aAAa,QAA/C,UACK,SACD,uBACIC,KAAK,QACLC,KAAK,OACLC,MAAM,QACNC,QAAyB,UAAhBnB,EAAOJ,KAChBwB,SAAU,SAACC,GAAD,OACNpB,EAAU,2BAAID,GAAL,IAAaJ,KAAMyB,EAAEC,cAAcJ,kBAK5D,oBAAGP,UAAU,WAAb,UACI,kCACK,eACD,cAAC1B,EAAD,CACI+B,KAAK,OACLO,YAAY,SACZL,MAAOlB,EAAOvC,OACd2D,SAAU,SAACC,GAAD,OAAOpB,EAAU,2BAAID,GAAL,IAAavC,OAAQ4D,EAAEG,OAAON,YAE5D,iCAAO1D,EAAoBwC,EAAOvC,QAAlC,cAEJ,kCACK,SACD,cAACwB,EAAD,CACI+B,KAAK,OACLO,YAAY,MACZL,MAAOlB,EAAOtB,IACd0C,SAAU,SAACC,GAAD,OAAOpB,EAAU,2BAAID,GAAL,IAAatB,IAAK2C,EAAEG,OAAON,YAEzD,+BAAO1D,EAAoBwC,EAAOtB,aAG1C,mBAAGiC,UAAU,WAAb,SACI,kCACK,oBACD,cAACvB,EAAD,CACI4B,KAAK,OACLO,YAAY,SACZL,MAAOlB,EAAOnC,MACduD,SAAU,SAACC,GAAD,OAAOpB,EAAU,2BAAID,GAAL,IAAanC,MAAOwD,EAAEG,OAAON,YAE3D,iCAAOtD,EAAcoC,EAAOnC,OAA5B,gBAGR,oBAAG8C,UAAU,WAAb,UACI,kCACK,8BACD,cAAC1B,EAAD,CACI+B,KAAK,SACLO,YAAY,eACZL,MAAOlB,EAAOF,IACdsB,SAAU,SAACC,GAAD,OAAOpB,EAAU,2BAAID,GAAL,IAAaF,IAAKuB,EAAEG,OAAON,YAEzD,iCAAOnD,EAAYiC,EAAOF,KAA1B,cAEJ,kCACK,yBACD,cAACb,EAAD,CACI+B,KAAK,SACLO,YAAY,WACZL,MAAOlB,EAAOD,QACdqB,SAAU,SAACC,GAAD,OACNpB,EAAU,2BAAID,GAAL,IAAaD,QAASsB,EAAEG,OAAON,YAGhD,+BAAOnD,EAAYiC,EAAOD,iBAGlC,0BAASY,UAAU,iBAAnB,UAQC,qBARD,OASA,oBAAGA,UAAU,WAAb,UACI,kCACK,UACD,cAACtB,EAAD,CACI2B,KAAK,SACLO,YAAY,KACZL,MAAOlB,EAAOH,KAAK3B,KACnBkD,SAAU,SAACC,GAAD,OACNpB,EAAU,2BACHD,GADE,IAELH,KAAK,2BAAKG,EAAOH,MAAb,IAAmB3B,KAAMmD,EAAEG,OAAON,cAIlD,iCAAOjD,EAAa+B,EAAOH,KAAK3B,MAAhC,cAEJ,kCACK,UACD,cAACmB,EAAD,CACI2B,KAAK,SACLO,YAAY,KACZL,MAAOlB,EAAOH,KAAKxB,KACnB+C,SAAU,SAACC,GAAD,OACNpB,EAAU,2BACHD,GADE,IAELH,KAAK,2BAAKG,EAAOH,MAAb,IAAmBxB,KAAMgD,EAAEG,OAAON,cAIlD,+BAAO9C,EAAa4B,EAAOH,KAAKxB,WAEpC,kCACK,aACD,cAACgB,EAAD,CACI2B,KAAK,SACLO,YAAY,OACZL,MAAOlB,EAAOH,KAAKtB,MACnB6C,SAAU,SAACC,GAAD,OACNpB,EAAU,2BACHD,GADE,IAELH,KAAK,2BAAKG,EAAOH,MAAb,IAAmBtB,MAAO8C,EAAEG,OAAON,cAInD,+BAAO5C,EAAc0B,EAAOH,KAAKtB,eAGzC,6BAhLa,kCAiLb,oBAAGoC,UAAU,WAAb,UACI,wBAAOc,MAAO,gCAA8Bd,UAAU,cAAtD,UACI,uBACIK,KAAK,QACLC,KAAK,MACLE,QAAoB,QAAXjB,EACTkB,SAAU,SAACC,GACPlB,EAAU,UAGjB,mCAEL,wBAAOQ,UAAU,cAAjB,UACI,uBACIK,KAAK,QACLE,MAAM,SACNC,QAAoB,WAAXjB,EACTkB,SAAU,SAACC,GAAD,OAAOlB,EAAU,aAE9B,oCAGT,mBAAGQ,UAAU,WAAb,SACI,cAAC1B,EAAD,CACI+B,KAAK,SACLJ,MAAO,CACHc,OAAQ,UAAWC,MAAO,UAAWC,WAAY,OAAQd,UAAU,QAEvEe,UACKpD,EACGuB,EAAOvC,OACPuC,EAAOtB,IACPsB,EAAOnC,MACPmC,EAAOF,IACPE,EAAOD,QACPC,EAAOH,KAAK3B,KACZ8B,EAAOH,KAAKxB,KACZ2B,EAAOH,KAAKtB,QAEhBS,EACIgB,EAAOvC,OACPuC,EAAOtB,IACPsB,EAAOnC,MACPmC,EAAOF,IACPE,EAAOH,KAAK3B,KACZ8B,EAAOH,KAAKxB,KACZ2B,EAAOH,KAAKtB,OAGpB2C,MAAM,gC,wBCnPf,G,MAAA,IAA0B,qCCIlC,SAASY,EAAeZ,GAC7B,QAAI,MAAMxD,KAAKwD,GAGV,SAASa,EAAoBb,GAClC,QAAI,wBAAwBxD,KAAKwD,GAG5B,SAASc,EAAkBd,GAChC,GAAI,QAAQxD,KAAKwD,GAAQ,OAAO,EAE3B,SAASe,EAAkBf,GAChC,GAAI,QAAQxD,KAAKwD,GAAQ,OAAO,E,6BC2HnBgB,MA3Hf,WACI,IDCwBC,EAAQC,EAlBPlB,ECiBnBmB,EAAM,cAAC,IAAD,IACNC,EAAW,cAAC,IAAD,IACXC,EAAY,cAAC,IAAD,CAAS3B,MAAO,CAACe,MAAO,WACpCa,EAAgB,cAAC,IAAD,CAAS5B,MAAO,CAACe,MAAO,SAG9C,EAAsBhC,mBADL,CAAC8C,QAAS,GAAIC,SAAU,KACzC,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAoCjD,oBAAS,GAA7C,mBAAOkD,EAAP,KAAmBC,EAAnB,KACA,EAAoCnD,oBAAS,GAA7C,mBAAOoD,EAAP,KAAmBC,EAAnB,KACMC,EAAWC,cACXzD,EAAWC,cAXO,4CAcxB,WAA4Bc,GAA5B,eAAA2C,EAAA,sDACyB,oCACf/C,EAAiB6C,EAASvC,MAAMN,eACtCI,EAAMC,iBACN2C,IACKC,KADL,UAHqB,oCAGrB,sDACwDjD,GADxD,IACwEE,SAAUqC,EAAIF,WACjFa,MAAK,SAACC,GACHC,QAAQC,IAAR,0BAA+BF,EAASG,OACxCjE,EAAS,QAEZkE,OAAM,SAACC,GACJA,EAAML,UAEFM,MAAM,cAAD,OAAeD,EAAML,SAASG,KAAKI,QAAnC,yDAbrB,4CAdwB,sBAgCxB,OACI,qCACA,qBAAKnD,UAAU,YAAf,SACI,qBAAKoD,IAAKC,EAASC,MAAM,QAAQC,OAAO,OAAOC,IAAI,gBAEnD,uBAAMxD,UAAU,aAAaJ,SArCb,4CAqChB,UACI,sBAAMI,UAAU,gBAAhB,SAjCM,yBAkCN,mBAAGA,UAAU,OAAb,SACI,kCACK,gBACD,cAAC1B,EAAD,CACI+B,KAAM6B,EAAa,WAAa,OAChCtB,YAAY,eACZL,MAAOyB,EAAIF,QACXrB,SAAU,SAACC,GAAD,OAAOuB,EAAO,2BAAID,GAAL,IAAUF,QAASpB,EAAEG,OAAON,YAEvD,mBACIP,UAAU,aACVyD,QAAS,kBAAMtB,GAAeD,IAFlC,SAIKA,EAAaP,EAAWD,SAIrC,mBAAG1B,UAAU,OAAb,SACI,kCACK,gCACD,cAAC1B,EAAD,CACI+B,KAAM+B,EAAa,WAAa,OAChCxB,YAAY,eACZL,MAAOyB,EAAID,SACXtB,SAAU,SAACC,GAAD,OAAOuB,EAAO,2BAAID,GAAL,IAAUD,SAAUrB,EAAEG,OAAON,YAExD,mBACIP,UAAU,cACVyD,QAAS,kBAAMpB,GAAeD,IAFlC,SAIKA,EAAaT,EAAWD,SAIrC,uBACA,qBACIzB,MAAO,CACHyD,cAAe,OACfC,UAAW,OACXC,WAAY,QACZC,WAAY,OACZC,cAAe,OACfC,gBAAiB,WAPzB,UAUI,4BAAI,uCACJ,wCACA,gCDtGSxD,ECuGSyB,EAAIF,QDtGpCvB,EAAMvD,OAAS,ECsG4C6E,EAAZD,GADjC,8BAIA,+BACKT,EAAea,EAAIF,SAAWF,EAAYC,EAD/C,wBAIA,+BACKT,EAAoBY,EAAIF,SAAWF,EAAYC,EADpD,+CAIA,+BACKP,EAAkBU,EAAIF,SAAWF,EAAYC,EADlD,kBAIA,+BACKR,EAAkBW,EAAIF,SAAWF,EAAYC,EADlD,kBAIA,gCDxGQL,ECyGSQ,EAAIF,QDzGLL,ECyGcO,EAAID,SDxGhDP,IAAWC,GAAqB,KAAXD,GAA4B,KAAXC,ECwGsBG,EAAYC,GAD1D,0CAKJ,mBAAG5B,MAAO,CAAC2D,WAAY,OAAQzD,UAAW,QAA1C,SACI,cAAC7B,EAAD,CACI2B,MAAO,CAACc,OAAQ,UAAWC,MAAO,UAAWC,WAAY,QACzDZ,KAAK,SACLE,MAAM,sC,MC7BfyD,MA9Ff,WACE,IAGMC,EAAc,CAAE/G,MAAO,GAAI8E,IAAK,IACtC,EAA4BhD,mBAASiF,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA8BnF,oBAAS,GAAvC,mBAAgBoF,GAAhB,WANe,4CASf,WAA4BvE,GAA5B,SAAA2C,EAAA,sDACuB,oCACrB3C,EAAMC,iBACN2C,IACKC,KADL,UAFqB,oCAErB,yBACkD,CAAExF,MAAOgH,EAAOhH,MAAO8E,IAAKkC,EAAOlC,MAChFW,MAAK,SAACC,GAICyB,aAAaC,QAAQ,QAAS1B,EAASG,MACvCsB,aAAaC,QAAQ,WAAYJ,EAAOhH,OACxC2F,QAAQC,IAAR,+BAAoCuB,aAAaE,QAAQ,WACzD1B,QAAQC,IAAR,qBAA0BuB,aAAaE,QAAQ,iBAGtDvB,OAAM,SAACC,GACGA,EAAML,SAASG,KACpBE,EAAML,WACsB,MAA1BK,EAAML,SAAS4B,OAAiBtB,MAAM,YAAD,OAAaD,EAAML,SAASG,OAChEG,MAAM,YAAD,OAAaD,EAAML,SAASG,KAAKI,cAKnDgB,EAAUF,GAxBZ,4CATe,sBAmCf,OACE,qCACE,qBAAKjE,UAAU,YAAf,SACE,oBAAGC,MAAO,CAAEwE,QAAS,QAArB,UACE,uBAAOxE,MAAO,CAAEE,UAAW,SAAUD,YAAa,SAAlD,kCAGA,cAACvB,EAAD,CAAY+F,GAAG,WAAf,6BACA,cAAC/F,EAAD,CAAY+F,GAAG,IAAf,yBAGJ,uBAAM1E,UAAU,UAAUJ,SA9Cf,4CA8CX,UACE,qBAAKwD,IAAKC,EAASC,MAAM,QAAQC,OAAO,OAAOC,IAAI,cACnD,uBACA,qCACE,sBAAMxD,UAAU,aAAhB,SAjDU,kBAkDV,4BACE,kCACG,kBACD,cAAC1B,EAAD,CACE+B,KAAK,OACLO,YAAY,SACZL,MAAO2D,EAAOhH,MACduD,SAAU,SAACC,GAAD,OACRyD,EAAU,2BAAKD,GAAN,IAAchH,MAAOwD,EAAEG,OAAON,UAEzCoE,aAAc,kBAAMP,GAAW,WAKrC,4BACE,kCACG,gBACD,cAAC9F,EAAD,CACE+B,KAAK,WACLO,YAAY,eACZL,MAAO2D,EAAOlC,IACdvB,SAAU,SAACC,GAAD,OAAOyD,EAAU,2BAAKD,GAAN,IAAclC,IAAKtB,EAAEG,OAAON,iBAM5D,oBAAGN,MAAO,CAAE2D,WAAY,OAAQzD,UAAW,QAA3C,UACE,mBAAGyE,KAAK,IAAR,oCACA,cAACtG,EAAD,CACE2B,MAAO,CAAEc,OAAQ,UAAWC,MAAO,UAAWC,WAAY,QAC1DZ,KAAK,SACLE,MAAM,eACNkD,QAAW,kBAAMW,GAAW,mBC3E3BS,MAZf,WACE,OACE,mCACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,UAAUC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOD,KAAK,cAAcC,QAAS,cAAC,EAAD,YCA5BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvC,MAAK,YAAkD,IAA/CwC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAeC,SAAUC,eAAzB,SACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.c3d0ec08.chunk.js","sourcesContent":["export function validatePrenomOuNom(prenom) {\r\n  //if (prenom.length < 4 && prenom !== \"\") return \"Trop court !\";\r\n  if (/\\d+/g.test(prenom)) return \"ne peut pas contenir des nombres !\";\r\n  else if (prenom.length > 12) return \"Trop long !\";\r\n  else return null;\r\n}\r\n\r\nexport function validateEmail(email) {\r\n  if (!email.includes(\"@\") && email.length > 14)\r\n    return \"Format d'e-mail invalide !\";\r\n  else return null;\r\n}\r\nexport function validateTel(telephone) {\r\n  if (telephone.length > 10) return \"Numéro de téléphone invalide !\";\r\n  else return null;\r\n}\r\nexport function validateJour(jour) {\r\n  const jourEnChiffres = parseInt(jour);\r\n  if (jourEnChiffres > 30 || jour.length > 2) return \"jour invalide !\";\r\n  else return null;\r\n}\r\nexport function validateMois(mois) {\r\n  const moisEnChiffres = parseInt(mois);\r\n  if (moisEnChiffres > 12 || mois.length > 2) return \"mois invalide !\";\r\n  else return null;\r\n}\r\nexport function validateAnnee(annee) {\r\n  const anneeEnChiffres = parseInt(annee);\r\n  if (anneeEnChiffres > 2003 || anneeEnChiffres < 1900 || annee.length > 4)\r\n    return \"année invalide !\";\r\n  else return null;\r\n}\r\nexport function validatePerson(\r\n  prenom,\r\n  nom,\r\n  email,\r\n  portable,\r\n  fixe,\r\n  jj,\r\n  mm,\r\n  yyyy\r\n) {\r\n  if (\r\n    !(\r\n      validatePrenomOuNom(prenom) ||\r\n      validatePrenomOuNom(nom) ||\r\n      validateEmail(email) ||\r\n      validateTel(portable) ||\r\n      validateTel(fixe) ||\r\n      validateJour(jj) ||\r\n      validateMois(mm) ||\r\n      validateAnnee(yyyy)\r\n    )\r\n  )\r\n    return true;\r\n}\r\nexport function isEmptyPerson(prenom, nom, email, portable, jj, mm, yyyy) {\r\n  if (!(prenom && nom && email && portable && jj && mm && yyyy)) return true;\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const Input = styled.input`\r\n  border: 2px solid #808080;\r\n  border-radius: 0.75em;\r\n  background: #f4f4f4;\r\n  font-size: 14px;\r\n  font-family: Poppins;\r\n  display: block;\r\n  width: 215px;\r\n  margin: 0.25em 1em 0em 0.25em;\r\n  padding: 1em;\r\n  &:focus {\r\n    outline: none !important;\r\n    border: 2px solid #662483;\r\n    box-shadow: 0 0 2px #a84fcf;\r\n  }\r\n  &:hover {\r\n    background: white;\r\n  }\r\n`;\r\nexport const InputLarge = styled(Input)`\r\n  width: 480px;\r\n`;\r\nexport const InputDate = styled(InputLarge)`\r\n  width: 125px;\r\n`;\r\nexport const Button = styled(InputLarge)`\r\n  font-weight: bold;\r\n  width: 135px;\r\n  color: #ef7d00;\r\n  &:hover {\r\n    cursor: pointer;\r\n    background: #dadada;\r\n  }\r\n`;\r\nexport const StyledLink = styled(Link)`\r\n  border: 2px solid #808080;\r\n  border-radius: 0.75em;\r\n  background: #f4f4f4;\r\n  display: block;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  font-weight: bold;\r\n  width: 135px;\r\n  color: #ef7d00;\r\n  margin: 0.25em 1em 0em 0.25em;\r\n  padding: 1em;\r\n  &:focus {\r\n    outline: none !important;\r\n    border: 2px solid #662483;\r\n    box-shadow: 0 0 2px #a84fcf;\r\n  }\r\n  &:hover {\r\n    cursor: pointer;\r\n    background: #dadada;\r\n  }\r\n`;\r\n// export const InputRadio = styled(Input)`\r\n//   padding: 1.5em;\r\n//   display: inline;\r\n// `;\r\n","import {useState} from \"react\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport \"./CreerCompte.css\";\r\nimport {\r\n    validateEmail,\r\n    validatePrenomOuNom,\r\n    validateAnnee,\r\n    validateJour,\r\n    validateMois,\r\n    validateTel,\r\n    validatePerson,\r\n    isEmptyPerson,\r\n} from \"./validationFunctions\";\r\nimport {Input, InputLarge, InputDate} from \"../styles.js\";\r\n\r\nfunction CreerCompte() {\r\n    const titrePage = \"Je crée mon compte \";\r\n    const commandeQuestion = \"Pour qui passez-vous commande\";\r\n    const navigate = useNavigate();\r\n    const emptyPerson = {\r\n        prenom: \"\",\r\n        nom: \"\",\r\n        sexe: \"HOMME\",\r\n        date: {jour: \"\", mois: \"\", annee: \"\"},\r\n        email: \"\",\r\n        tel: \"\",\r\n        telFixe: \"\",\r\n    };\r\n    const [person, setPerson] = useState(emptyPerson);\r\n    const [client, setClient] = useState(\"moi\");\r\n\r\n    const userToRegister = {\r\n        prenom: person.prenom,\r\n        nom: person.nom,\r\n        sexe: person.sexe,\r\n        email: person.email,\r\n        tel: person.tel,\r\n        telFixe: person.telFixe,\r\n        dateNaiss: `${person.date.annee}-${person.date.mois}-${person.date.jour}`,\r\n        password: \"default\"\r\n    };\r\n\r\n\r\n\r\n     function handleSubmit(event) {\r\n        event.preventDefault();\r\n        navigate(\"/sign-up-mdp\", {state: {userToRegister}});\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>{titrePage}</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <p className=\"pContent\">\r\n                    <label style={{marginRight: \"40px\", marginTop: \"35px\", marginBottom:\"20px\"}}>\r\n                        {\"Homme \"}\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"sexe\"\r\n                            value=\"HOMME\"\r\n                            checked={person.sexe === \"HOMME\"}\r\n                            onChange={(e) =>\r\n                                setPerson({...person, sexe: e.currentTarget.value})\r\n                            }\r\n                        />\r\n                    </label>\r\n                    <label style={{marginTop: \"35px\", marginBottom:\"20px\"}}>\r\n                        {\"Femme \"}\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"sexe\"\r\n                            value=\"FEMME\"\r\n                            checked={person.sexe === \"FEMME\"}\r\n                            onChange={(e) =>\r\n                                setPerson({...person, sexe: e.currentTarget.value})\r\n                            }\r\n                        />\r\n                    </label>\r\n                </p>\r\n                <p className=\"pContent\">\r\n                    <label>\r\n                        {\"Prénom * \"}\r\n                        <Input\r\n                            type=\"text\"\r\n                            placeholder=\"prenom\"\r\n                            value={person.prenom}\r\n                            onChange={(e) => setPerson({...person, prenom: e.target.value})}\r\n                        />\r\n                        <span>{validatePrenomOuNom(person.prenom)} &nbsp;</span>\r\n                    </label>\r\n                    <label>\r\n                        {\"Nom * \"}\r\n                        <Input\r\n                            type=\"text\"\r\n                            placeholder=\"nom\"\r\n                            value={person.nom}\r\n                            onChange={(e) => setPerson({...person, nom: e.target.value})}\r\n                        />\r\n                        <span>{validatePrenomOuNom(person.nom)}</span>\r\n                    </label>\r\n                </p>\r\n                <p className=\"pContent\">\r\n                    <label>\r\n                        {\"Adresse e-mail * \"}\r\n                        <InputLarge\r\n                            type=\"text\"\r\n                            placeholder=\"e-mail\"\r\n                            value={person.email}\r\n                            onChange={(e) => setPerson({...person, email: e.target.value})}\r\n                        />\r\n                        <span>{validateEmail(person.email)} &nbsp;</span>\r\n                    </label>\r\n                </p>\r\n                <p className=\"pContent\">\r\n                    <label>\r\n                        {\"téléphone portable * \"}\r\n                        <Input\r\n                            type=\"number\"\r\n                            placeholder=\"tel portable\"\r\n                            value={person.tel}\r\n                            onChange={(e) => setPerson({...person, tel: e.target.value})}\r\n                        />\r\n                        <span>{validateTel(person.tel)} &nbsp;</span>\r\n                    </label>\r\n                    <label>\r\n                        {\"téléphone fixe  \"}\r\n                        <Input\r\n                            type=\"number\"\r\n                            placeholder=\"tel fixe\"\r\n                            value={person.telFixe}\r\n                            onChange={(e) =>\r\n                                setPerson({...person, telFixe: e.target.value})\r\n                            }\r\n                        />\r\n                        <span>{validateTel(person.telFixe)}</span>\r\n                    </label>\r\n                </p>\r\n                <section className=\"sectionContent\"\r\n                    // style={{\r\n                    //     textAlign: \"left\",\r\n                    //     color: \"#662483\",\r\n                    //     marginLeft: \"26em\",\r\n                    //     marginBottom: \"-1em\",\r\n                    // }}\r\n                >\r\n                {\"Date de naissance \"} </section>\r\n                <p className=\"pContent\">\r\n                    <label>\r\n                        {\"Jour  *\"}\r\n                        <InputDate\r\n                            type=\"number\"\r\n                            placeholder=\"JJ\"\r\n                            value={person.date.jour}\r\n                            onChange={(e) =>\r\n                                setPerson({\r\n                                    ...person,\r\n                                    date: {...person.date, jour: e.target.value},\r\n                                })\r\n                            }\r\n                        />\r\n                        <span>{validateJour(person.date.jour)} &nbsp;</span>\r\n                    </label>\r\n                    <label>\r\n                        {\"Mois  *\"}\r\n                        <InputDate\r\n                            type=\"number\"\r\n                            placeholder=\"MM\"\r\n                            value={person.date.mois}\r\n                            onChange={(e) =>\r\n                                setPerson({\r\n                                    ...person,\r\n                                    date: {...person.date, mois: e.target.value},\r\n                                })\r\n                            }\r\n                        />\r\n                        <span>{validateMois(person.date.mois)}</span>\r\n                    </label>\r\n                    <label>\r\n                        {\"Année *\"}\r\n                        <InputDate\r\n                            type=\"number\"\r\n                            placeholder=\"AAAA\"\r\n                            value={person.date.annee}\r\n                            onChange={(e) =>\r\n                                setPerson({\r\n                                    ...person,\r\n                                    date: {...person.date, annee: e.target.value},\r\n                                })\r\n                            }\r\n                        />\r\n                        <span>{validateAnnee(person.date.annee)}</span>\r\n                    </label>\r\n                </p>\r\n                <h4>{commandeQuestion}</h4>\r\n                <p className=\"pContent\">\r\n                    <label field={\"Je commande pour moi-même \"} className=\"radioStyled\">\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"moi\"\r\n                            checked={client === \"moi\"}\r\n                            onChange={(e) => {\r\n                                setClient(\"moi\");\r\n                            }}\r\n                        />\r\n                        {\"Je commande pour moi-même \"}\r\n                    </label>\r\n                    <label className=\"radioStyled\">\r\n                        <input\r\n                            type=\"radio\"\r\n                            value=\"proche\"\r\n                            checked={client === \"proche\"}\r\n                            onChange={(e) => setClient(\"proche\")}\r\n                        />\r\n                        {\"Je commande pour un proche \"}\r\n                    </label>\r\n                </p>\r\n                <p className=\"pContent\">\r\n                    <Input\r\n                        type=\"submit\"\r\n                        style={{\r\n                            cursor: \"pointer\", color: \"#ef7d00\", fontWeight: \"bold\" ,marginTop:\"30px\"\r\n                        }}\r\n                        disabled={\r\n                            !validatePerson(\r\n                                person.prenom,\r\n                                person.nom,\r\n                                person.email,\r\n                                person.tel,\r\n                                person.telFixe,\r\n                                person.date.jour,\r\n                                person.date.mois,\r\n                                person.date.annee\r\n                            ) ||\r\n                            isEmptyPerson(\r\n                                person.prenom,\r\n                                person.nom,\r\n                                person.email,\r\n                                person.tel,\r\n                                person.date.jour,\r\n                                person.date.mois,\r\n                                person.date.annee\r\n                            )\r\n                        }\r\n                        value=\"Valider mon compte\"\r\n                    />\r\n                </p>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreerCompte;\r\n","export default __webpack_public_path__ + \"static/media/mlrLogo.61109c2f.png\";","export function validateSize(value) {\r\n  if (value.length < 8) return false;\r\n  else return true;\r\n}\r\nexport function validateNumber(value) {\r\n  if (/\\d+/.test(value)) return true;\r\n  else return false;\r\n}\r\nexport function validateSpecialChar(value) {\r\n  if (/[|\\\\/~^:,;?!&%$@*{}+]/.test(value)) return true;\r\n  else return false;\r\n}\r\nexport function validateMinuscule(value) {\r\n  if (/[a-z]/.test(value)) return true;\r\n}\r\nexport function validateMajuscule(value) {\r\n  if (/[A-Z]/.test(value)) return true;\r\n}\r\nexport function CompareMdps(value1, value2) {\r\n  if (value1 === value2 && value1 !== \"\" && value2 !== \"\") return true;\r\n  else return false;\r\n}\r\n","import \"./mdpPage.css\";\r\nimport imgLogo from \"../../images/mlrLogo.png\";\r\nimport {\r\n    validateMajuscule,\r\n    validateMinuscule,\r\n    validateNumber,\r\n    CompareMdps,\r\n    validateSize,\r\n    validateSpecialChar,\r\n} from \"./validateMdpFunctions.js\";\r\nimport {useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {useLocation, useNavigate} from \"react-router-dom\";\r\nimport {Input} from \"../styles.js\";\r\nimport {FaEye, FaEyeSlash, FaCheck, FaTimes} from \"react-icons/fa\";\r\n\r\nfunction CreerComptePart2() {\r\n    const eye = <FaEye/>;\r\n    const eyeSlash = <FaEyeSlash/>;\r\n    const checkIcon = <FaCheck style={{color: \"green\"}}/>;\r\n    const incorrectIcon = <FaTimes style={{color: \"red\"}}/>;\r\n    const titrePage = \"Nouveau mot de passe\";\r\n    const emptyMdp = {initMdp: \"\", verifMdp: \"\"};\r\n    const [mdp, setMdp] = useState(emptyMdp);\r\n    const [input1Hide, setInput1Hide] = useState(true);\r\n    const [input2Hide, setInput2Hide] = useState(true);\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n\r\n\r\n    async function handleSubmit(event) {\r\n        const URL_API_HTTP = \"http://localhost:8080/api/clients\";\r\n        const userToRegister = location.state.userToRegister;\r\n        event.preventDefault();\r\n        axios\r\n            .post(`${URL_API_HTTP}/authentication/sign-up`, {...userToRegister, password: mdp.initMdp})\r\n            .then((response) => {\r\n                console.log(`jeton de mail : ${response.data}`);\r\n                navigate(\"/\");\r\n            })\r\n            .catch((error) => {\r\n            if (error.response) {\r\n                    //console.log(`data : ${error.response.data.message}`);\r\n                    alert(`l'erreur : ${error.response.data.message} a empêche le bon fonctionnement de cette page`);\r\n                }\r\n            });\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"eltParent\">\r\n            <img src={imgLogo} width=\"320px\" height=\"69px\" alt=\"not-found\"/>\r\n        </div>\r\n            <form className=\"eltFilsMdp\" onSubmit={handleSubmit}>\r\n                <span className=\"titreStyleMdp\">{titrePage}</span>\r\n                <p className=\"pMdp\">\r\n                    <label>\r\n                        {\"Mot de passe \"}\r\n                        <Input\r\n                            type={input1Hide ? \"password\" : \"text\"}\r\n                            placeholder=\"Mot de passe\"\r\n                            value={mdp.initMdp}\r\n                            onChange={(e) => setMdp({...mdp, initMdp: e.target.value})}\r\n                        />\r\n                        <i\r\n                            className=\"eyeWrapper\"\r\n                            onClick={() => setInput1Hide(!input1Hide)}\r\n                        >\r\n                            {input1Hide ? eyeSlash : eye}\r\n                        </i>\r\n                    </label>\r\n                </p>\r\n                <p className=\"pMdp\">\r\n                    <label>\r\n                        {\"Confirmation du mot de passe \"}\r\n                        <Input\r\n                            type={input2Hide ? \"password\" : \"text\"}\r\n                            placeholder=\"mot de passe\"\r\n                            value={mdp.verifMdp}\r\n                            onChange={(e) => setMdp({...mdp, verifMdp: e.target.value})}\r\n                        />\r\n                        <i\r\n                            className=\"eye2Wrapper\"\r\n                            onClick={() => setInput2Hide(!input2Hide)}\r\n                        >\r\n                            {input2Hide ? eyeSlash : eye}\r\n                        </i>\r\n                    </label>\r\n                </p>\r\n                <br/>\r\n                <ul\r\n                    style={{\r\n                        listStyleType: \"none\",\r\n                        textAlign: \"left\",\r\n                        marginLeft: \"-33px\",\r\n                        paddingTop: \"10px\",\r\n                        paddingBottom: \"18px\",\r\n                        backgroundColor: \"#f4f4f4\",\r\n                    }}\r\n                >\r\n                    <b>{\"Votre mot de passe doit contenir :\"}</b>\r\n                    <li> &nbsp; </li>\r\n                    <li>\r\n                        {validateSize(mdp.initMdp) ? checkIcon : incorrectIcon} 8 caractères\r\n                        minimum\r\n                    </li>\r\n                    <li>\r\n                        {validateNumber(mdp.initMdp) ? checkIcon : incorrectIcon} 1 chiffre\r\n                        minimum\r\n                    </li>\r\n                    <li>\r\n                        {validateSpecialChar(mdp.initMdp) ? checkIcon : incorrectIcon} 1\r\n                        caractère spécial (!@*,) minimum\r\n                    </li>\r\n                    <li>\r\n                        {validateMajuscule(mdp.initMdp) ? checkIcon : incorrectIcon} 1\r\n                        Majuscule\r\n                    </li>\r\n                    <li>\r\n                        {validateMinuscule(mdp.initMdp) ? checkIcon : incorrectIcon} 1\r\n                        Miniscule\r\n                    </li>\r\n                    <li>\r\n                        {CompareMdps(mdp.initMdp, mdp.verifMdp) ? checkIcon : incorrectIcon}\r\n                        Les mots de passe sont identiques\r\n                    </li>\r\n                </ul>\r\n                <p style={{marginLeft: \"45px\", marginTop: \"30px\"}}>\r\n                    <Input\r\n                        style={{cursor: \"pointer\", color: \"#ef7d00\", fontWeight: \"bold\"}}\r\n                        type=\"submit\"\r\n                        value=\"Enregistrer mot de passe\"\r\n                    />\r\n                </p>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CreerComptePart2;\r\n","import { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport imgLogo from \"../../images/mlrLogo.png\";\r\n\r\nimport { Input, StyledLink } from \"../styles.js\";\r\nimport \"./index.css\";\r\n\r\n\r\nfunction Login() {\r\n  const titrePage = \"Se connecter \";\r\n  const EMAIL_ERRONE = \"adresse mail erronée, compte inexistant !\";\r\n  const MOT_DE_PASSE_ERRONE = \"Access Denied\";\r\n  const emptyCompte = { email: \"\", mdp: \"\" };\r\n  const [compte, setCompte] = useState(emptyCompte);\r\n  const [isShown, setIsShown] = useState(true);\r\n  let erreur = \"erreur1\";\r\n\r\n  async function handleSubmit(event) {\r\n    const URL_API_HTTP = \"http://localhost:8080/api/clients\";\r\n    event.preventDefault();\r\n    axios\r\n        .post(`${URL_API_HTTP}/authentication/login`, { email: compte.email, mdp: compte.mdp })\r\n        .then((response) => {\r\n         //   if (response.data.message === \"Vous n'a pas assez de privilèges pour se connecter, Veuillez confirmez votre email !\")\r\n\r\n        //    else {\r\n                localStorage.setItem(\"token\", response.data);\r\n                localStorage.setItem(\"username\", compte.email);\r\n                console.log(`jeton de connexion : ${localStorage.getItem(\"token\")}`);\r\n                console.log(`username : ${localStorage.getItem(\"username\")}`);\r\n         //   }\r\n        })\r\n        .catch((error) => {\r\n          erreur = error.response.data ;\r\n          if (error.response) {\r\n            if (error.response.status === 400)  alert(`erreur : ${error.response.data}`);\r\n            else alert(`erreur : ${error.response.data.message}`);\r\n          }\r\n        });\r\n\r\n    //console.log(localStorage.setItem(\"token\", \"\"));\r\n    setCompte(emptyCompte);\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"eltParent\">\r\n        <p style={{ display: \"flex\"}}>\r\n          <label style={{ marginTop: \"0.75em\", marginRight: \"0.5em\" }}>\r\n          Pas encore inscrit ?\r\n          </label>\r\n          <StyledLink to=\"/sign-up\">Créer compte</StyledLink>\r\n          <StyledLink to=\"#\">Retour</StyledLink>\r\n        </p>\r\n      </div>\r\n      <form className=\"eltFils\" onSubmit={handleSubmit}>\r\n        <img src={imgLogo} width=\"255px\" height=\"55px\" alt=\"not-found\" />\r\n        <br />\r\n        <>\r\n          <span className=\"titreStyle\">{titrePage}</span>\r\n          <p>\r\n            <label>\r\n              {\"Adresse e-mail \"}\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"E-mail\"\r\n                value={compte.email}\r\n                onChange={(e) =>\r\n                  setCompte({ ...compte, email: e.target.value })\r\n                }\r\n                onMouseEnter={() => setIsShown(false)}\r\n              />\r\n                {/*<span>{isShown && erreur === EMAIL_ERRONE && EMAIL_ERRONE}</span>*/}\r\n            </label>\r\n          </p>\r\n          <p>\r\n            <label>\r\n              {\"Mot de passe \"}\r\n              <Input\r\n                type=\"password\"\r\n                placeholder=\"Mot de passe\"\r\n                value={compte.mdp}\r\n                onChange={(e) => setCompte({ ...compte, mdp: e.target.value })}\r\n                //onMouseEnter={() => setIsShown(false)}\r\n              />\r\n                {/*<span>{isShown && erreur === MOT_DE_PASSE_ERRONE && MOT_DE_PASSE_ERRONE}</span>*/}\r\n            </label>\r\n          </p>\r\n          <p style={{ marginLeft: \"15px\", marginTop: \"30px\"}}>\r\n            <a href=\"#\">Mot de passe oublié</a>\r\n            <Input\r\n              style={{ cursor: \"pointer\", color: \"#ef7d00\", fontWeight: \"bold\" }}\r\n              type=\"submit\"\r\n              value=\"Se connecter\"\r\n              onClick = {() => setIsShown(true)}\r\n            />\r\n          </p>\r\n        </>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import { Routes, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport CreerCompte from \"./Components/CreerCompte/index\";\nimport CreerComptePart2 from \"./Components/CreerCompte/mdpPage\";\nimport Login from \"./Components/Login/index\";\n\nfunction App() {\n  return (\n    <>\n      <Routes>\n        <Route path=\"/\" element={<Login/>} />\n        <Route path=\"sign-up\" element={<CreerCompte />} />\n        <Route path=\"sign-up-mdp\" element={<CreerComptePart2 />} />\n      </Routes>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}