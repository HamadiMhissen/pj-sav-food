{"version":3,"sources":["Components/CreerCompte/validationFunctions.js","Components/styles.js","Components/CreerCompte/index.js","images/mlrLogo.png","Components/CreerCompte/validateMdpFunctions.js","Components/CreerCompte/mdpPage.js","Components/Login/index.js","App.js","reportWebVitals.js","index.js"],"names":["validatePrenomOuNom","prenom","length","test","validateEmail","email","includes","validateTel","telephone","validateJour","jour","parseInt","validateMois","mois","validateAnnee","annee","anneeEnChiffres","validatePerson","nom","portable","fixe","jj","mm","yyyy","isEmptyPerson","Input","styled","input","InputLarge","InputDate","StyledLink","Link","CreerCompte","navigate","useNavigate","emptyPerson","gender","date","tel","telFixe","useState","person","setPerson","client","setClient","onSubmit","event","preventDefault","alert","className","style","marginRight","type","name","checked","onChange","e","value","placeholder","target","textAlign","color","marginLeft","marginBottom","field","disabled","validateNumber","validateSpecialChar","validateMinuscule","validateMajuscule","CreerComptePart2","value1","value2","eye","eyeSlash","checkIcon","incorrectIcon","initMdp","verifMdp","mdp","setMdp","input1Hide","setInput1Hide","input2Hide","setInput2Hide","src","imgLogo","width","height","alt","onClick","listStyleType","backgroundColor","cursor","Login","emptyCompte","compte","setCompte","display","marginTop","to","href","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.7418ac5b.chunk.js","sourcesContent":["export function validatePrenomOuNom(prenom) {\r\n  if (prenom.length < 4 && prenom !== \"\") return \"Trop court !\";\r\n  else if (/\\d+/g.test(prenom)) return \"ne peut pas contenir des nombres !\";\r\n  else if (prenom.length > 12) return \"Trop long !\";\r\n  else return null;\r\n}\r\n\r\nexport function validateEmail(email) {\r\n  if (!email.includes(\"@\") && email.length > 14)\r\n    return \"Format d'e-mail invalide !\";\r\n  else return null;\r\n}\r\nexport function validateTel(telephone) {\r\n  if (telephone.length > 10) return \"Numéro de téléphone invalide !\";\r\n  else return null;\r\n}\r\nexport function validateJour(jour) {\r\n  const jourEnChiffres = parseInt(jour);\r\n  if (jourEnChiffres > 30 || jour.length > 2) return \"jour invalide !\";\r\n  else return null;\r\n}\r\nexport function validateMois(mois) {\r\n  const moisEnChiffres = parseInt(mois);\r\n  if (moisEnChiffres > 12 || mois.length > 2) return \"mois invalide !\";\r\n  else return null;\r\n}\r\nexport function validateAnnee(annee) {\r\n  const anneeEnChiffres = parseInt(annee);\r\n  if (anneeEnChiffres > 2003 || anneeEnChiffres < 1900 || annee.length > 4)\r\n    return \"année invalide !\";\r\n  else return null;\r\n}\r\nexport function validatePerson(\r\n  prenom,\r\n  nom,\r\n  email,\r\n  portable,\r\n  fixe,\r\n  jj,\r\n  mm,\r\n  yyyy\r\n) {\r\n  if (\r\n    !(\r\n      validatePrenomOuNom(prenom) ||\r\n      validatePrenomOuNom(nom) ||\r\n      validateEmail(email) ||\r\n      validateTel(portable) ||\r\n      validateTel(fixe) ||\r\n      validateJour(jj) ||\r\n      validateMois(mm) ||\r\n      validateAnnee(yyyy)\r\n    )\r\n  )\r\n    return true;\r\n}\r\nexport function isEmptyPerson(prenom, nom, email, portable, jj, mm, yyyy) {\r\n  if (!(prenom && nom && email && portable && jj && mm && yyyy)) return true;\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const Input = styled.input`\r\n  border: 2px solid #808080;\r\n  border-radius: 0.75em;\r\n  background: #f4f4f4;\r\n  display: block;\r\n  width: 215px;\r\n  margin: 0.25em 1em 0em 0.25em;\r\n  padding: 1em;\r\n  &:focus {\r\n    outline: none !important;\r\n    border: 2px solid #662483;\r\n    box-shadow: 0 0 2px #a84fcf;\r\n  }\r\n  &:hover {\r\n    background: white;\r\n  }\r\n`;\r\nexport const InputLarge = styled(Input)`\r\n  width: 480px;\r\n`;\r\nexport const InputDate = styled(InputLarge)`\r\n  width: 125px;\r\n`;\r\nexport const Button = styled(InputLarge)`\r\n  font-weight: bold;\r\n  width: 135px;\r\n  color: #ef7d00;\r\n  &:hover {\r\n    cursor: pointer;\r\n    background: #dadada;\r\n  }\r\n`;\r\nexport const StyledLink = styled(Link)`\r\n  border: 2px solid #808080;\r\n  border-radius: 0.75em;\r\n  background: #f4f4f4;\r\n  display: block;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  font-weight: bold;\r\n  width: 135px;\r\n  color: #ef7d00;\r\n  margin: 0.25em 1em 0em 0.25em;\r\n  padding: 1em;\r\n  &:focus {\r\n    outline: none !important;\r\n    border: 2px solid #662483;\r\n    box-shadow: 0 0 2px #a84fcf;\r\n  }\r\n  &:hover {\r\n    cursor: pointer;\r\n    background: #dadada;\r\n  }\r\n`;\r\n// export const InputRadio = styled(Input)`\r\n//   padding: 1.5em;\r\n//   display: inline;\r\n// `;\r\n","import { React, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./CreerCompte.css\";\r\nimport {\r\n  validateEmail,\r\n  validatePrenomOuNom,\r\n  validateAnnee,\r\n  validateJour,\r\n  validateMois,\r\n  validateTel,\r\n  validatePerson,\r\n  isEmptyPerson,\r\n} from \"./validationFunctions\";\r\nimport { Input, InputLarge, InputDate } from \"../styles.js\";\r\nfunction CreerCompte() {\r\n  const titrePage = \"Je crée mon compte :\";\r\n  const commandeQuestion = \"Pour qui passez-vous commande\";\r\n  const navigate = useNavigate();\r\n  const emptyPerson = {\r\n    prenom: \"\",\r\n    nom: \"\",\r\n    gender: \"homme\",\r\n    date: { jour: \"\", mois: \"\", annee: \"\" },\r\n    email: \"\",\r\n    tel: \"\",\r\n    telFixe: \"\",\r\n  };\r\n  const [person, setPerson] = useState(emptyPerson);\r\n  const [client, setClient] = useState(\"moi\");\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    alert(`utilisateur ${person.nom} crée `);\r\n    setPerson(emptyPerson);\r\n    navigate(\"/sign-up-mdp\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>{titrePage}</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <p className=\"pContent\">\r\n          <label style={{ marginRight: \"40px\" }}>\r\n            {\"Homme \"}\r\n            <input\r\n              type=\"radio\"\r\n              name=\"Homme\"\r\n              checked={person.gender === \"homme\"}\r\n              onChange={(e) => setPerson({ ...person, gender: \"homme\" })}\r\n            />\r\n          </label>\r\n          <label>\r\n            {\"Femme \"}\r\n            <input\r\n              type=\"radio\"\r\n              value=\"Femme\"\r\n              checked={person.gender === \"femme\"}\r\n              onChange={(e) => setPerson({ ...person, gender: \"femme\" })}\r\n            />\r\n          </label>\r\n        </p>\r\n        <p className=\"pContent\">\r\n          <label>\r\n            {\"Prénom : \"}\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"prenom\"\r\n              value={person.prenom}\r\n              onChange={(e) => setPerson({ ...person, prenom: e.target.value })}\r\n            />\r\n            <span>{validatePrenomOuNom(person.prenom)} &nbsp;</span>\r\n          </label>\r\n          <label>\r\n            {\"Nom : \"}\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"nom\"\r\n              value={person.nom}\r\n              onChange={(e) => setPerson({ ...person, nom: e.target.value })}\r\n            />\r\n            <span>{validatePrenomOuNom(person.nom)}</span>\r\n          </label>\r\n        </p>\r\n        <p className=\"pContent\">\r\n          <label>\r\n            {\"Adresse e-mail : \"}\r\n            <InputLarge\r\n              type=\"text\"\r\n              placeholder=\"e-mail\"\r\n              value={person.email}\r\n              onChange={(e) => setPerson({ ...person, email: e.target.value })}\r\n            />\r\n            <span>{validateEmail(person.email)} &nbsp;</span>\r\n          </label>\r\n        </p>\r\n        <p className=\"pContent\">\r\n          <label>\r\n            {\"téléphone portable : \"}\r\n            <Input\r\n              type=\"number\"\r\n              placeholder=\"tel portable\"\r\n              value={person.tel}\r\n              onChange={(e) => setPerson({ ...person, tel: e.target.value })}\r\n            />\r\n            <span>{validateTel(person.tel)} &nbsp;</span>\r\n          </label>\r\n          <label>\r\n            {\"téléphone fixe : \"}\r\n            <Input\r\n              type=\"number\"\r\n              placeholder=\"tel fixe\"\r\n              value={person.telFixe}\r\n              onChange={(e) =>\r\n                setPerson({ ...person, telFixe: e.target.value })\r\n              }\r\n            />\r\n            <span>{validateTel(person.telFixe)}</span>\r\n          </label>\r\n        </p>\r\n        <section\r\n          style={{\r\n            textAlign: \"left\",\r\n            color: \"#662483\",\r\n            marginLeft: \"26em\",\r\n            marginBottom: \"-1em\",\r\n          }}\r\n        >\r\n          Date de naissance\r\n        </section>\r\n        <p className=\"pContent\">\r\n          <label>\r\n            {\"Jour : \"}\r\n            <InputDate\r\n              type=\"number\"\r\n              placeholder=\"JJ\"\r\n              value={person.date.jour}\r\n              onChange={(e) =>\r\n                setPerson({\r\n                  ...person,\r\n                  date: { ...person.date, jour: e.target.value },\r\n                })\r\n              }\r\n            />\r\n            <span>{validateJour(person.date.jour)} &nbsp;</span>\r\n          </label>\r\n          <label>\r\n            {\"Mois : \"}\r\n            <InputDate\r\n              type=\"number\"\r\n              placeholder=\"MM\"\r\n              value={person.date.mois}\r\n              onChange={(e) =>\r\n                setPerson({\r\n                  ...person,\r\n                  date: { ...person.date, mois: e.target.value },\r\n                })\r\n              }\r\n            />\r\n            <span>{validateMois(person.date.mois)}</span>\r\n          </label>\r\n          <label>\r\n            {\"Année : \"}\r\n            <InputDate\r\n              type=\"number\"\r\n              placeholder=\"YYYY\"\r\n              value={person.date.annee}\r\n              onChange={(e) =>\r\n                setPerson({\r\n                  ...person,\r\n                  date: { ...person.date, annee: e.target.value },\r\n                })\r\n              }\r\n            />\r\n            <span>{validateAnnee(person.date.annee)}</span>\r\n          </label>\r\n        </p>\r\n        <h4>{commandeQuestion}</h4>\r\n        <p className=\"pContent\">\r\n          <label field={\"Je commande pour moi-même \"} className=\"radioStyled\">\r\n            <input\r\n              type=\"radio\"\r\n              name=\"moi\"\r\n              checked={client === \"moi\"}\r\n              onChange={(e) => setClient(\"moi\")}\r\n            />\r\n            {\"Je commande pour moi-même \"}\r\n          </label>\r\n          <label className=\"radioStyled\">\r\n            <input\r\n              type=\"radio\"\r\n              value=\"proche\"\r\n              checked={client === \"proche\"}\r\n              onChange={(e) => setClient(\"proche\")}\r\n            />\r\n            {\"Je commande pour un proche \"}\r\n          </label>\r\n        </p>\r\n        <p className=\"pContent\">\r\n          <Input\r\n            type=\"submit\"\r\n            disabled={\r\n              !validatePerson(\r\n                person.prenom,\r\n                person.nom,\r\n                person.email,\r\n                person.tel,\r\n                person.telFixe,\r\n                person.date.jour,\r\n                person.date.mois,\r\n                person.date.annee\r\n              ) ||\r\n              isEmptyPerson(\r\n                person.prenom,\r\n                person.nom,\r\n                person.email,\r\n                person.tel,\r\n                person.date.jour,\r\n                person.date.mois,\r\n                person.date.annee\r\n              )\r\n            }\r\n            value=\"Je valide mon compte\"\r\n          />\r\n        </p>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreerCompte;\r\n","export default __webpack_public_path__ + \"static/media/mlrLogo.61109c2f.png\";","export function validateSize(value) {\r\n  if (value.length < 8) return false;\r\n  else return true;\r\n}\r\nexport function validateNumber(value) {\r\n  if (/\\d+/.test(value)) return true;\r\n  else return false;\r\n}\r\nexport function validateSpecialChar(value) {\r\n  if (/[|\\\\/~^:,;?!&%$@*{}+]/.test(value)) return true;\r\n  else return false;\r\n}\r\nexport function validateMinuscule(value) {\r\n  if (/[a-z]/.test(value)) return true;\r\n}\r\nexport function validateMajuscule(value) {\r\n  if (/[A-Z]/.test(value)) return true;\r\n}\r\nexport function CompareMdps(value1, value2) {\r\n  if (value1 === value2 && value1 !== \"\" && value2 !== \"\") return true;\r\n  else return false;\r\n}\r\n","import \"./mdpPage.css\";\r\nimport imgLogo from \"../../images/mlrLogo.png\";\r\nimport {\r\n  validateMajuscule,\r\n  validateMinuscule,\r\n  validateNumber,\r\n  CompareMdps,\r\n  validateSize,\r\n  validateSpecialChar,\r\n} from \"./validateMdpFunctions.js\";\r\nimport { useState } from \"react\";\r\nimport { Input } from \"../styles.js\";\r\nimport { FaEye, FaEyeSlash, FaCheck, FaTimes } from \"react-icons/fa\";\r\nfunction CreerComptePart2() {\r\n  const eye = <FaEye />;\r\n  const eyeSlash = <FaEyeSlash />;\r\n  const checkIcon = <FaCheck style={{ color: \"green\" }} />;\r\n  const incorrectIcon = <FaTimes style={{ color: \"red\" }} />;\r\n  const titrePage = \"Nouveau mot de passe\";\r\n  const emptyMdp = { initMdp: \"\", verifMdp: \"\" };\r\n  const [mdp, setMdp] = useState(emptyMdp);\r\n  const [input1Hide, setInput1Hide] = useState(true);\r\n  const [input2Hide, setInput2Hide] = useState(true);\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n  }\r\n  return (\r\n    <div className=\"eltParent\">\r\n      <form className=\"eltFils\" onSubmit={handleSubmit}>\r\n        <img src={imgLogo} width=\"320px\" height=\"69px\" alt=\"not-found\" />\r\n        <br />\r\n        <span className=\"titreStyleMdp\">{titrePage}</span>\r\n        <p>\r\n          <label>\r\n            {\"Mot de passe : \"}\r\n            <Input\r\n              type={input1Hide ? \"password\" : \"text\"}\r\n              placeholder=\"Mot de passe\"\r\n              value={mdp.initMdp}\r\n              onChange={(e) => setMdp({ ...mdp, initMdp: e.target.value })}\r\n            />\r\n            <i\r\n              className=\"eyeWrapper\"\r\n              onClick={() => setInput1Hide(!input1Hide)}\r\n            >\r\n              {input1Hide ? eyeSlash : eye}\r\n            </i>\r\n          </label>\r\n        </p>\r\n        <p>\r\n          <label>\r\n            {\"Confirmation du mot de passe : \"}\r\n            <Input\r\n              type={input2Hide ? \"password\" : \"text\"}\r\n              placeholder=\"Confirmation du mot de passe\"\r\n              value={mdp.verifMdp}\r\n              onChange={(e) => setMdp({ ...mdp, verifMdp: e.target.value })}\r\n            />\r\n            <i\r\n              className=\"eye2Wrapper\"\r\n              onClick={() => setInput2Hide(!input2Hide)}\r\n            >\r\n              {input2Hide ? eyeSlash : eye}\r\n            </i>\r\n          </label>\r\n        </p>\r\n        <br />\r\n        <ul\r\n          style={{\r\n            listStyleType: \"none\",\r\n            textAlign: \"left\",\r\n            marginLeft: \"-30px\",\r\n            backgroundColor: \"#f4f4f4\",\r\n          }}\r\n        >\r\n          <b>{\"Votre mot de passe doit contenir :\"}</b>\r\n          <li>\r\n            {validateSize(mdp.initMdp) ? checkIcon : incorrectIcon} 8 caractères\r\n            minimum\r\n          </li>\r\n          <li>\r\n            {validateNumber(mdp.initMdp) ? checkIcon : incorrectIcon} 1 chiffre\r\n            minimum\r\n          </li>\r\n          <li>\r\n            {validateSpecialChar(mdp.initMdp) ? checkIcon : incorrectIcon} 1\r\n            caractère spécial (!@*,) minimum\r\n          </li>\r\n          <li>\r\n            {validateMajuscule(mdp.initMdp) ? checkIcon : incorrectIcon} 1\r\n            Majuscule\r\n          </li>\r\n          <li>\r\n            {validateMinuscule(mdp.initMdp) ? checkIcon : incorrectIcon} 1\r\n            Miniscule\r\n          </li>\r\n          <li>\r\n            {CompareMdps(mdp.initMdp, mdp.verifMdp) ? checkIcon : incorrectIcon}\r\n            Les mots de passe sont identiques\r\n          </li>\r\n        </ul>\r\n        <p style={{ marginLeft: \"15px\" }}>\r\n          <Input\r\n            style={{ cursor: \"pointer\" }}\r\n            type=\"submit\"\r\n            value=\"Valider mon mot de passe\"\r\n          />\r\n        </p>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\nexport default CreerComptePart2;\r\n","import { useState } from \"react\";\r\nimport imgLogo from \"../../images/mlrLogo.png\";\r\n\r\nimport { Input, StyledLink } from \"../styles.js\";\r\nimport \"./index.css\";\r\n\r\nfunction Login() {\r\n  const titrePage = \"Se connecter :\";\r\n  const emptyCompte = { email: \"\", mdp: \"\" };\r\n  const [compte, setCompte] = useState(emptyCompte);\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    setCompte(emptyCompte);\r\n  }\r\n  return (\r\n    <div className=\"eltParent\">\r\n      <p style={{ display: \"flex\" }}>\r\n        <label style={{ marginTop: \"0.75em\", marginRight: \"0.5em\" }}>\r\n          Pas encore inscrit ?\r\n        </label>\r\n        <StyledLink to=\"/sign-up\">Créer compte</StyledLink>\r\n        <StyledLink to=\"#\">Retour</StyledLink>\r\n        {/* <Button type=\"button\" value=\"Retour\" /> */}\r\n      </p>\r\n      <form className=\"eltFils\" onSubmit={handleSubmit}>\r\n        <img src={imgLogo} width=\"255px\" height=\"55px\" alt=\"not-found\" />\r\n        <br />\r\n        <>\r\n          <span className=\"titreStyle\">{titrePage}</span>\r\n          <p>\r\n            <label>\r\n              {\"Adresse e-mail : \"}\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"E-mail\"\r\n                value={compte.email}\r\n                onChange={(e) =>\r\n                  setCompte({ ...compte, email: e.target.value })\r\n                }\r\n              />\r\n            </label>\r\n          </p>\r\n          <p>\r\n            <label>\r\n              {\"Mot de passe : \"}\r\n              <Input\r\n                type=\"password\"\r\n                placeholder=\"Mot de passe\"\r\n                value={compte.mdp}\r\n                onChange={(e) => setCompte({ ...compte, mdp: e.target.value })}\r\n              />\r\n            </label>\r\n          </p>\r\n          <p style={{ marginLeft: \"15px\" }}>\r\n            <a href=\"#\">Mot de passe oublié</a>\r\n            <Input\r\n              style={{ cursor: \"pointer\" }}\r\n              type=\"submit\"\r\n              value=\"Se connecter\"\r\n            />\r\n          </p>\r\n        </>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import { Routes, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport CreerCompte from \"./Components/CreerCompte/index\";\nimport CreerComptePart2 from \"./Components/CreerCompte/mdpPage\";\nimport Login from \"./Components/Login/index\";\n\nfunction App() {\n  return (\n    <>\n      <Routes>\n        <Route path=\"/\" element={<Login />}></Route>\n        <Route path=\"sign-up\" element={<CreerCompte />} />\n        <Route path=\"sign-up-mdp\" element={<CreerComptePart2 />} />\n      </Routes>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}